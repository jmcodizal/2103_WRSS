/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package wrss1;

import MyConnection.MyConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import static javax.management.remote.JMXConnectorFactory.connect;
import javax.swing.JOptionPane;


/**
 *
 * @author Juan Cedrick Lopez
 */
public class ADMINDASHBOARD extends javax.swing.JFrame {

    

    /**
     * Creates new form ADMINDASHBOARD
     */
    public ADMINDASHBOARD() {
        initComponents();
        Connection connect = MyConnection.getMyConnection().getConnection();
        if (connect != null) {
            System.out.println("Connected successfully from ADMINDASHBOARD JFrame!");
        } else {
            JOptionPane.showMessageDialog(this, "Database connection failed!",
                                          "Connection Error", JOptionPane.ERROR_MESSAGE);
        }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
         private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        txtadmindashboard = new javax.swing.JLabel();
        buttontotalwalkin = new java.awt.Button();
        buttontotaldeliveries = new java.awt.Button();
        buttonviewdeliveriesbybarangay = new java.awt.Button();
        buttonoverallsales = new java.awt.Button();
        buttonsalesperbarangayperday = new java.awt.Button();
        buttonsummarybycontainerr = new java.awt.Button();
        button7 = new java.awt.Button();
        jLabelimage = new javax.swing.JLabel();

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtadmindashboard.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        txtadmindashboard.setText("ADMIN DASHBOARD");
        jPanel1.add(txtadmindashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, -1, 20));

        buttontotalwalkin.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        buttontotalwalkin.setLabel("TOTAL WALK-IN");
        buttontotalwalkin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttontotalwalkinActionPerformed(evt);
            }
        });
        jPanel1.add(buttontotalwalkin, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 240, 60));

        buttontotaldeliveries.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        buttontotaldeliveries.setLabel("TOTAL DELIVERIES");
        buttontotaldeliveries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttontotaldeliveriesActionPerformed(evt);
            }
        });
        jPanel1.add(buttontotaldeliveries, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 240, 60));

        buttonviewdeliveriesbybarangay.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        buttonviewdeliveriesbybarangay.setLabel("VIEW DELIVERIES BY BARANGAY");
        buttonviewdeliveriesbybarangay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonviewdeliveriesbybarangayActionPerformed(evt);
            }
        });
        jPanel1.add(buttonviewdeliveriesbybarangay, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 240, 60));

        buttonoverallsales.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        buttonoverallsales.setLabel("OVERALL SALES");
        buttonoverallsales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonoverallsalesActionPerformed(evt);
            }
        });
        jPanel1.add(buttonoverallsales, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, 210, 60));

        buttonsalesperbarangayperday.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        buttonsalesperbarangayperday.setLabel("SALES PER BARANGAY PER DAY");
        buttonsalesperbarangayperday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonsalesperbarangayperdayActionPerformed(evt);
            }
        });
        jPanel1.add(buttonsalesperbarangayperday, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 210, 210, 60));

        buttonsummarybycontainerr.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        buttonsummarybycontainerr.setLabel("SUMMARY BY CONTAINER");
        buttonsummarybycontainerr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonsummarybycontainerrActionPerformed(evt);
            }
        });
        jPanel1.add(buttonsummarybycontainerr, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 210, 60));

        button7.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        button7.setLabel("RECEIPT PAYMENT");
        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });
        jPanel1.add(button7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 390, 180, 70));

        jLabelimage.setIcon(new javax.swing.ImageIcon("C:\\Users\\Juan Cedrick Lopez\\Documents\\WRSS\\Wrss1\\safe-water-splash.jpg")); // NOI18N
        jLabelimage.setText("jLabel1");
        jPanel1.add(jLabelimage, new org.netbeans.lib.awtextra.AbsoluteConstraints(-110, -40, 690, 530));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, 490));

        pack();

        
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        txtadmindashboard = new javax.swing.JLabel();
        buttontotalwalkin = new java.awt.Button();
        buttontotaldeliveries = new java.awt.Button();
        buttonviewdeliveriesbybarangay = new java.awt.Button();
        buttonoverallsales = new java.awt.Button();
        buttonsalesperbarangayperday = new java.awt.Button();
        buttonsummarybycontainerr = new java.awt.Button();
        button7 = new java.awt.Button();
        jLabelimage = new javax.swing.JLabel();

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtadmindashboard.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        txtadmindashboard.setText("ADMIN DASHBOARD");
        jPanel1.add(txtadmindashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, -1, 20));

        buttontotalwalkin.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        buttontotalwalkin.setLabel("TOTAL WALK-IN");
        buttontotalwalkin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttontotalwalkinActionPerformed(evt);
            }
        });
        jPanel1.add(buttontotalwalkin, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 240, 60));

        buttontotaldeliveries.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        buttontotaldeliveries.setLabel("TOTAL DELIVERIES");
        buttontotaldeliveries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttontotaldeliveriesActionPerformed(evt);
            }
        });
        jPanel1.add(buttontotaldeliveries, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 240, 60));

        buttonviewdeliveriesbybarangay.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        buttonviewdeliveriesbybarangay.setLabel("VIEW DELIVERIES BY BARANGAY");
        buttonviewdeliveriesbybarangay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonviewdeliveriesbybarangayActionPerformed(evt);
            }
        });
        jPanel1.add(buttonviewdeliveriesbybarangay, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 240, 60));

        buttonoverallsales.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        buttonoverallsales.setLabel("OVERALL SALES");
        buttonoverallsales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonoverallsalesActionPerformed(evt);
            }
        });
        jPanel1.add(buttonoverallsales, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, 210, 60));

        buttonsalesperbarangayperday.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        buttonsalesperbarangayperday.setLabel("SALES PER BARANGAY PER DAY");
        buttonsalesperbarangayperday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonsalesperbarangayperdayActionPerformed(evt);
            }
        });
        jPanel1.add(buttonsalesperbarangayperday, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 210, 210, 60));

        buttonsummarybycontainerr.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        buttonsummarybycontainerr.setLabel("SUMMARY BY CONTAINER");
        buttonsummarybycontainerr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonsummarybycontainerrActionPerformed(evt);
            }
        });
        jPanel1.add(buttonsummarybycontainerr, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 210, 60));

        button7.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        button7.setLabel("RECEIPT PAYMENT");
        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });
        jPanel1.add(button7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 390, 180, 70));

        jLabelimage.setIcon(new javax.swing.ImageIcon("C:\\Users\\Juan Cedrick Lopez\\Documents\\WRSS\\Wrss1\\safe-water-splash.jpg")); // NOI18N
        jLabelimage.setText("jLabel1");
        jPanel1.add(jLabelimage, new org.netbeans.lib.awtextra.AbsoluteConstraints(-110, -40, 690, 530));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, 490));

        pack();
    }// </editor-fold>                        
      
    private void buttonsummarybycontainerrActionPerformed(java.awt.event.ActionEvent evt) {                                                          
        // TODO add your handling code here:
        
        try {
            String query = "SELECT container_type, SUM(quantity) AS total_quantity " +
                           "FROM orders " +
                           "GROUP BY container_type";
            PreparedStatement stmt = connect.prepareStatement(query);
            ResultSet rs = stmt.executeQuery();

            StringBuilder summary = new StringBuilder();
            summary.append("Summary by Container:\n");
            while (rs.next()) {
                String containerType = rs.getString("container_type");
                int totalQuantity = rs.getInt("total_quantity");
                summary.append(containerType).append(": ").append(totalQuantity).append("\n");
            }

            JOptionPane.showMessageDialog(this, summary.toString(),
                                          "Container Summary", JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error fetching summary by container: " + e.getMessage(),
                                          "Error", JOptionPane.ERROR_MESSAGE);
        }
    }                                                         

    private void buttontotalwalkinActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
        
        try {
            String query = "SELECT COUNT(*) AS total_walkin FROM customers WHERE delivery_type = 'Walk-in'";
            PreparedStatement stmt = connect.prepareStatement(query);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                int totalWalkin = rs.getInt("total_walkin");
                JOptionPane.showMessageDialog(this, "Total Walk-in Customers: " + totalWalkin,
                                              "Walk-in Customer Count", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error fetching total walk-in customers: " + e.getMessage(),
                                          "Error", JOptionPane.ERROR_MESSAGE);
        }
    }                                                 

    private void buttonoverallsalesActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
        
        try {
            String query = "SELECT SUM(price * quantity) AS total_sales FROM orders";
            PreparedStatement stmt = connect.prepareStatement(query);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                double totalSales = rs.getDouble("total_sales");
                JOptionPane.showMessageDialog(this, "Total Sales: " + String.format("%.2f", totalSales),
                                              "Overall Sales", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error fetching total sales: " + e.getMessage(),
                                          "Error", JOptionPane.ERROR_MESSAGE);
        }
    }                                                  

    private void buttontotaldeliveriesActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        // TODO add your handling code here:
        
        try {
            String query = "SELECT COUNT(*) AS total_deliveries FROM customers WHERE delivery_type != 'Walk-in'";
            PreparedStatement stmt = connect.prepareStatement(query);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                int totalDeliveries = rs.getInt("total_deliveries");
                JOptionPane.showMessageDialog(this, "Total Delivery Customers: " + totalDeliveries,
                                              "Delivery Customer Count", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error fetching total deliveries: " + e.getMessage(),
                                          "Error", JOptionPane.ERROR_MESSAGE);
        }
    }                                                     

    private void buttonsalesperbarangayperdayActionPerformed(java.awt.event.ActionEvent evt) {                                                             
        // TODO add your handling code here:
        
        try {
            String query = "SELECT c.barangay, DATE(o.order_date) AS order_date, SUM(o.price * o.quantity) AS total_sales " +
                           "FROM orders o " +
                           "JOIN customers c ON o.customer_id = c.customer_id " +
                           "GROUP BY c.barangay, DATE(o.order_date)";
            PreparedStatement stmt = connect.prepareStatement(query);
            ResultSet rs = stmt.executeQuery();

            StringBuilder salesByBarangay = new StringBuilder();
            salesByBarangay.append("Sales Per Barangay Per Day:\n");
            while (rs.next()) {
                String barangay = rs.getString("barangay");
                String orderDate = rs.getString("order_date");
                double totalSales = rs.getDouble("total_sales");
                salesByBarangay.append(barangay).append(", ").append(orderDate).append(": ").append(String.format("%.2f", totalSales)).append("\n");
            }

            JOptionPane.showMessageDialog(this, salesByBarangay.toString(),
                                          "Sales by Barangay", JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error fetching sales per barangay per day: " + e.getMessage(),
                                          "Error", JOptionPane.ERROR_MESSAGE);
        }
    }                                                            

    private void buttonviewdeliveriesbybarangayActionPerformed(java.awt.event.ActionEvent evt) {                                                               
        // TODO add your handling code here:
        
         try {
            String query = "SELECT barangay, COUNT(*) AS delivery_count " +
                           "FROM customers " +
                           "WHERE delivery_type != 'Walk-in' " +
                           "GROUP BY barangay";
            PreparedStatement stmt = connect.prepareStatement(query);
            ResultSet rs = stmt.executeQuery();

            StringBuilder deliveriesByBarangay = new StringBuilder();
            deliveriesByBarangay.append("Deliveries by Barangay:\n");
            while (rs.next()) {
                String barangay = rs.getString("barangay");
                int deliveryCount = rs.getInt("delivery_count");
                deliveriesByBarangay.append(barangay).append(": ").append(deliveryCount).append("\n");
            }

            JOptionPane.showMessageDialog(this, deliveriesByBarangay.toString(),
                                          "Deliveries by Barangay", JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error fetching deliveries by barangay: " + e.getMessage(),
                                          "Error", JOptionPane.ERROR_MESSAGE);
        }
    }                                                              

    private void button7ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        
        RECEIPT receipt = new RECEIPT();
        receipt.setVisible(true);
        this.dispose();
    }                                       

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ADMINDASHBOARD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ADMINDASHBOARD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ADMINDASHBOARD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ADMINDASHBOARD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ADMINSYSTEM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ADMINDASHBOARD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ADMINDASHBOARD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ADMINDASHBOARD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ADMINDASHBOARD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ADMINDASHBOARD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private java.awt.Button button7;
    private java.awt.Button buttonoverallsales;
    private java.awt.Button buttonsalesperbarangayperday;
    private java.awt.Button buttonsummarybycontainerr;
    private java.awt.Button buttontotaldeliveries;
    private java.awt.Button buttontotalwalkin;
    private java.awt.Button buttonviewdeliveriesbybarangay;
    private javax.swing.JLabel jLabelimage;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel txtadmindashboard;
    // End of variables declaration                   

    private static class ADMINSYSTEM {

        public ADMINSYSTEM() {
        }

        private void setVisible(boolean b) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }
    }

    private static class connect {

        private static PreparedStatement prepareStatement(String query) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        public connect() {
        }
    }
}
